Table USERS {
  userId uuid [primary key, default: `gen_random_uuid()`]
  ntuEmail varchar(63) [not null, unique]
  username varchar(80) [not null]
  hashedPassword varchar(255) [not null]
  avatarUrl varchar
}

Table RESTAURANTS {
  placeId varchar(300) [primary key]
  name varchar(200) [not null]
  address varchar(100) [not null]
  latitude double [not null]
  longitude double [not null]
}

Table RESTAURANT_TYPES {
  placeId varchar(300) [primary key]
  type varchar(20) [primary key]
}
Ref: RESTAURANT_TYPES.placeId > RESTAURANTS.placeId [delete: cascade, update: cascade]

Table REVIEWS {
  placeId varchar(300) [not null]
  reviewerId uuid
  stars int [not null]
  content varchar(2000)
  expense int
  createdAt timestamp [not null, default: `now()`]
}
Ref: REVIEWS.placeId > RESTAURANTS.placeId [delete: cascade, update: cascade]
Ref: REVIEWS.reviewerId > USERS.userId [delete: set null, update: cascade]

Table TAGS {
  tagId uuid [primary key, default: `gen_random_uuid()`]
  tagName varchar(50) [not null]
}

Table TAG_OWNERS {
  tagId uuid [primary key]
  ownerId uuid [primary key]
}
Ref: TAG_OWNERS.tagId > TAGS.tagId [delete: cascade, update: cascade]
Ref: TAG_OWNERS.ownerId > USERS.userId [delete: cascade, update: cascade]

Table TAGGED_RESTAURANTS {
  tagId uuid [primary key]
  placeId varchar(300) [primary key]
}
Ref: TAGGED_RESTAURANTS.tagId > TAGS.tagId [delete: cascade, update: cascade]
Ref: TAGGED_RESTAURANTS.placeId > RESTAURANTS.placeId [delete: cascade, update: cascade]

Table DATES {
  dateId uuid [primary key, default: `gen_random_uuid()`]
  occuredAt timestamp [not null]
}

Table DATE_PARTICIPANTS {
  entryId: 
  dateId uuid
  participantId uuid
}
Ref: DATE_PARTICIPANTS.dateId > DATES.dateId [delete: cascade, update: cascade]
Ref: DATE_PARTICIPANTS.participantId > USERS.userId [delete: set null, update: cascade]

TABLE PRIVATE_MESSAGES {
  messageId uuid [primary key, default: `gen_random_uuid()`]
  dateId uuid [not null]
  senderId uuid
  sentAt timestamp [default: `now()`]
  content varchar(1000) [not null]
}
Ref: PRIVATE_MESSAGES.dateId > DATES.dateId [delete: cascade, update: cascade]
Ref: PRIVATE_MESSAGES.senderId > USERS.userId [delete: set null, update: cascade]